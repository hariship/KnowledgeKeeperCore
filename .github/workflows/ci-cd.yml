name: CI/CD for KnowledgeKeeperCore

on:
  push:
    branches:
      - develop
      - main

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Prepare SSH Configuration
      - name: Prepare SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_PRIVATE_KEY }} # Ensure the private key is set in GitHub Secrets
          SSH_PASSPHRASE: 7842
        run: |
          # Create .ssh directory and set permissions
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          # Save the private key as id_rsa
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Use ssh-agent to add the private keys with passphrase
          eval "$(ssh-agent -s)"
          echo "${SSH_PASSPHRASE}" | ssh-add ~/.ssh/id_rsa

          # Add server to known_hosts
          ssh-keyscan -H ec2-18-189-31-171.us-east-2.compute.amazonaws.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      # Step 3: Test SSH Connection
      - name: Test SSH Connection
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@ec2-18-189-31-171.us-east-2.compute.amazonaws.com echo "SSH connection successful"

      # Step 4: Deploy to Staging Server (develop branch)
      - name: Deploy to Staging Server
        if: github.ref_name == 'develop'
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@ec2-18-189-31-171.us-east-2.compute.amazonaws.com \
            "cd ~/KnowledgeKeeperCore_Develop && \
            git pull origin develop && \
            docker-compose down && \
            docker-compose up --build -d"

      # Step 5: Deploy to Production Server (main branch)
      - name: Deploy to Production Server
        if: github.ref_name == 'main'
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@ec2-18-189-31-171.us-east-2.compute.amazonaws.com \
            "cd ~/KnowledgeKeeperCore && \
            git pull origin main && \
            docker-compose down && \
            docker-compose up --build -d"